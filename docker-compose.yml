services:
  db:
    image: postgres
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${PORT_POSTGRES}:${PORT_POSTGRES}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:latest
    restart: always
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      retries: 5
      timeout: 5s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-docker-app
    env_file:
    - .env
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app 
      - /app/node_modules 
    command: ["/bin/sh", "./entrypoint.sh"]



volumes:
  pgdata:
  redis_data:
